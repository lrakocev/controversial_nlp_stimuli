ModuleCmd_Load.c(213):ERROR:105: Unable to locate a modulefile for 'python'
2020-09-03 10:39:42.460921: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /cm/shared/openmind/cudnn/cudnn-8.0-v5.1/lib64:/cm/shared/openmind/cuda/8.0/lib64:/cm/shared/openmind/cuda/8.0/lib
2020-09-03 10:39:42.462420: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /cm/shared/openmind/cudnn/cudnn-8.0-v5.1/lib64:/cm/shared/openmind/cuda/8.0/lib64:/cm/shared/openmind/cuda/8.0/lib
2020-09-03 10:39:42.462453: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
2020-09-03 10:39:59.663577: W tensorflow/python/util/util.cc:319] Sets are not currently considered sequences, but this may change in the future, so consider avoiding using them.
2020-09-03 10:39:59.848470: I tensorflow/stream_executor/platform/default/dso_loader.cc:44] Successfully opened dynamic library libcuda.so.1
2020-09-03 10:39:59.856737: E tensorflow/stream_executor/cuda/cuda_driver.cc:351] failed call to cuInit: CUDA_ERROR_NO_DEVICE: no CUDA-capable device is detected
2020-09-03 10:39:59.856780: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:169] retrieving CUDA diagnostic information for host: node081
2020-09-03 10:39:59.856791: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:176] hostname: node081
2020-09-03 10:39:59.856890: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:200] libcuda reported version is: 440.82.0
2020-09-03 10:39:59.856931: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:204] kernel reported version is: 440.82.0
2020-09-03 10:39:59.856940: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:310] kernel version seems to match DSO: 440.82.0
2020-09-03 10:39:59.857345: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2020-09-03 10:39:59.868535: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2100000000 Hz
2020-09-03 10:39:59.869378: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x557634974ba0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-09-03 10:39:59.869402: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
All model checkpoint weights were used when initializing TFGPT2LMHeadModel.

All the weights of TFGPT2LMHeadModel were initialized from the model checkpoint at gpt2.
If your task is similar to the task the model of the ckeckpoint was trained on, you can already use TFGPT2LMHeadModel for predictions without further training.
All model checkpoint weights were used when initializing TFTransfoXLLMHeadModel.

All the weights of TFTransfoXLLMHeadModel were initialized from the model checkpoint at transfo-xl-wt103.
If your task is similar to the task the model of the ckeckpoint was trained on, you can already use TFTransfoXLLMHeadModel for predictions without further training.
Traceback (most recent call last):
  File "judge_sentences.py", line 10, in <module>
    from auto_regressive import get_distribution, js
  File "/mindhive/evlab/u/lrakocev/controversial_nlp_stimuli/auto_regressive.py", line 104, in <module>
    gpt2_dict = get_distribution(model_info, "GPT2", curr_context, {})
  File "/mindhive/evlab/u/lrakocev/controversial_nlp_stimuli/auto_regressive.py", line 16, in get_distribution
    outputs = model(input)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 822, in __call__
    outputs = self.call(cast_inputs, *args, **kwargs)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/transformers/modeling_tf_gpt2.py", line 566, in call
    transformer_outputs = self.transformer(inputs, **kwargs)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 822, in __call__
    outputs = self.call(cast_inputs, *args, **kwargs)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/transformers/modeling_tf_gpt2.py", line 348, in call
    inputs_embeds = self.wte(input_ids, mode="embedding")
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py", line 822, in __call__
    outputs = self.call(cast_inputs, *args, **kwargs)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/transformers/modeling_tf_utils.py", line 616, in call
    return self._embedding(inputs)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/transformers/modeling_tf_utils.py", line 624, in _embedding
    return tf.gather(self.weight, input_ids)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/util/dispatch.py", line 180, in wrapper
    return target(*args, **kwargs)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/ops/array_ops.py", line 4125, in gather_v2
    batch_dims=batch_dims)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/util/dispatch.py", line 180, in wrapper
    return target(*args, **kwargs)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/ops/array_ops.py", line 4106, in gather
    return params.sparse_read(indices, name=name)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/ops/resource_variable_ops.py", line 645, in sparse_read
    self._handle, indices, dtype=self._dtype, name=name)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/ops/gen_resource_variable_ops.py", line 556, in resource_gather
    _ops.raise_from_not_ok_status(e, name)
  File "/om2/user/lrakocev/anaconda/lib/python3.7/site-packages/tensorflow_core/python/framework/ops.py", line 6606, in raise_from_not_ok_status
    six.raise_from(core._status_to_exception(e.code, message), None)
  File "<string>", line 3, in raise_from
tensorflow.python.framework.errors_impl.InvalidArgumentError: Value for attr 'Tindices' of float is not in the list of allowed values: int32, int64
	; NodeDef: {{node ResourceGather}}; Op<name=ResourceGather; signature=resource:resource, indices:Tindices -> output:dtype; attr=batch_dims:int,default=0; attr=validate_indices:bool,default=true; attr=dtype:type; attr=Tindices:type,allowed=[DT_INT32, DT_INT64]; is_stateful=true> [Op:ResourceGather] name: tfgp_t2lm_head_model/transformer/wte/Gather/
